////// for gradle source code
apply plugin: "groovy"
apply plugin: "eclipse"
apply plugin: "idea"

repositories {
    jcenter()
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    compile 'org.fluttercode.datafactory:datafactory:0.8'
}

wrapper {
    distributionUrl = 'http://services.gradle.org/distributions/gradle-2.13-all.zip'
}

import com.epages.dslimport.*

// optional: CustomerPlugin actually gets applied transparently by RandomCustomerPlugin
apply plugin: CustomerPlugin
apply plugin: ProductPlugin

if (project.properties.randomCustomers > 0) {
    apply plugin: RandomCustomerPlugin
}

def randomCustomers = Integer.valueOf(project.properties.randomCustomers)

model {
    customers {
        jack(Customer) {
            firstName = 'Jack'
            lastName = "Smith"
            emailAddress = "jack@is-online.now"
            address {
                street = 'Sunny Side Rd 22'
                city = 'New York'
            }
        }
        john(Customer) {
            firstName = 'John'
            lastName = "Doe"
        }
        barry(Customer) {
            firstName = 'Barry'
            lastName = "White"
        }
        randomCustomers.times { i ->
            "random${i}"(Customer)
        }
    }
}

// products
model {
    products {
        a(Product) {
            sku = 'abc-123'
        }
    }
    tasks {
        listProducts(Task) {
            def products = $.products
            doLast {
                products.each { p ->
                    println p.sku
                }
            }
        }
    }
}

apply from: 'gradle/tasks.gradle'
